"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.transform = exports.parse = exports.delegateUrl = void 0;
const utils_js_1 = require("../utils.js");
const detect_js_1 = require("../detect.js");
const delegateUrl = (url) => {
    const parsedUrl = (0, utils_js_1.toUrl)(url);
    const searchParamHref = parsedUrl.searchParams.get("href");
    const decodedHref = typeof searchParamHref === "string"
        ? decodeURIComponent(searchParamHref)
        : new URL(parsedUrl.pathname, parsedUrl.origin).toString();
    const source = (0, utils_js_1.toCanonicalUrlString)((0, utils_js_1.toUrl)(decodedHref));
    if (!source || !source.startsWith("http")) {
        return false;
    }
    const cdn = (0, detect_js_1.getImageCdnForUrlByDomain)(source);
    if (!cdn) {
        return false;
    }
    return {
        cdn,
        url: source,
    };
};
exports.delegateUrl = delegateUrl;
const parse = (url) => {
    const parsedUrl = (0, utils_js_1.toUrl)(url);
    const searchParamHref = parsedUrl.searchParams.get("href");
    const decodedHref = typeof searchParamHref === "string"
        ? decodeURIComponent(searchParamHref)
        : new URL(parsedUrl.pathname, parsedUrl.origin).toString();
    const encodedHref = encodeURIComponent((0, utils_js_1.toCanonicalUrlString)((0, utils_js_1.toUrl)(decodedHref)));
    const width = (0, utils_js_1.getNumericParam)(parsedUrl, "w") || undefined;
    const height = (0, utils_js_1.getNumericParam)(parsedUrl, "h") || undefined;
    const format = parsedUrl.searchParams.get("f") || undefined;
    const quality = parsedUrl.searchParams.get("q") || undefined;
    return {
        width,
        height,
        format,
        base: `/_image?href=${encodedHref}`,
        params: { quality, href: encodedHref },
        cdn: "astro",
    };
};
exports.parse = parse;
const transform = ({ url: originalUrl, width, height, format, }) => {
    const parsedUrl = (0, utils_js_1.toUrl)(originalUrl);
    const href = (0, utils_js_1.toCanonicalUrlString)(new URL(parsedUrl.pathname, parsedUrl.origin));
    const url = { searchParams: new URLSearchParams() };
    (0, utils_js_1.setParamIfDefined)(url, "href", href, true, true);
    (0, utils_js_1.setParamIfDefined)(url, "w", width, true, true);
    (0, utils_js_1.setParamIfDefined)(url, "h", height, true, true);
    (0, utils_js_1.setParamIfDefined)(url, "f", format);
    return `/_image?${url.searchParams.toString()}`;
};
exports.transform = transform;
