"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getImageCdnForUrlByPath = exports.getImageCdnForUrlByDomain = exports.getImageCdnForUrl = void 0;
const domains_js_1 = __importDefault(require("../data/domains.js"));
const subdomains_js_1 = __importDefault(require("../data/subdomains.js"));
const paths_js_1 = __importDefault(require("../data/paths.js"));
const utils_js_1 = require("./utils.js");
const cdnDomains = new Map(Object.entries(domains_js_1.default));
const cdnSubdomains = Object.entries(subdomains_js_1.default);
function getImageCdnForUrl(url) {
    return getImageCdnForUrlByDomain(url) || getImageCdnForUrlByPath(url);
}
exports.getImageCdnForUrl = getImageCdnForUrl;
function getImageCdnForUrlByDomain(url) {
    if (typeof url === "string" && !url.startsWith("https://")) {
        return false;
    }
    const { hostname } = (0, utils_js_1.toUrl)(url);
    if (cdnDomains.has(hostname)) {
        return cdnDomains.get(hostname);
    }
    for (const [subdomain, cdn] of cdnSubdomains) {
        if (hostname.endsWith(`.${subdomain}`)) {
            return cdn;
        }
    }
    return false;
}
exports.getImageCdnForUrlByDomain = getImageCdnForUrlByDomain;
function getImageCdnForUrlByPath(url) {
    // Allow relative URLs
    const { pathname } = (0, utils_js_1.toUrl)(url);
    for (const [prefix, cdn] of Object.entries(paths_js_1.default)) {
        if (pathname.startsWith(prefix)) {
            return cdn;
        }
    }
    return false;
}
exports.getImageCdnForUrlByPath = getImageCdnForUrlByPath;
