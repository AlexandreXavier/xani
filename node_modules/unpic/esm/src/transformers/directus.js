import { getNumericParam, setParamIfDefined, toUrl } from "../utils.js";
export const parse = (imageUrl) => {
    const parsedUrl = toUrl(imageUrl);
    const width = getNumericParam(parsedUrl, "width");
    const height = getNumericParam(parsedUrl, "height");
    const format = parsedUrl.searchParams.get("format") || undefined;
    const quality = getNumericParam(parsedUrl, "quality") || undefined;
    let fit = parsedUrl.searchParams.get("fit") ||
        undefined;
    const withoutEnlargement = parsedUrl.searchParams.get("withoutEnlargement") === "true" || undefined;
    const transforms = parsedUrl.searchParams.get("transforms") || undefined;
    // if fit doesn't satisfy the type, it will be undefined
    if (fit && !["cover", "contain", "inside", "outside"].includes(fit)) {
        fit = undefined;
    }
    return {
        width,
        height,
        format,
        base: parsedUrl.toString(),
        params: {
            fit,
            quality,
            withoutEnlargement,
            transforms: transforms ? JSON.parse(transforms) : undefined,
        },
        cdn: "directus",
    };
};
export const transform = ({ url: originalUrl, width, height, format }) => {
    const url = toUrl(originalUrl);
    setParamIfDefined(url, "width", width, true, true);
    setParamIfDefined(url, "height", height, true, true);
    setParamIfDefined(url, "format", format);
    setParamIfDefined(url, "quality", getNumericParam(url, "quality"), true);
    return url;
};
