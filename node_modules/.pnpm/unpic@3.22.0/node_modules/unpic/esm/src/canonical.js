import { getImageCdnForUrl } from "./detect.js";
import { delegateUrl as vercel } from "./transformers/vercel.js";
import { delegateUrl as nextjs } from "./transformers/nextjs.js";
// Image servers that might delegate to another CDN
const delegators = {
    vercel,
    nextjs,
};
export function getDelegatedCdn(url, cdn) {
    // Most CDNs are authoritative for their own URLs
    if (!(cdn in delegators)) {
        return false;
    }
    const maybeDelegate = delegators[cdn];
    if (!maybeDelegate) {
        return false;
    }
    return maybeDelegate(url);
}
/**
 * Gets the canonical URL and CDN for a given image URL, recursing into
 * the source image if it is hosted on another CDN.
 */
export function getCanonicalCdnForUrl(url, defaultCdn) {
    const cdn = getImageCdnForUrl(url) || defaultCdn;
    if (!cdn) {
        return false;
    }
    const maybeDelegated = getDelegatedCdn(url, cdn);
    if (maybeDelegated) {
        return maybeDelegated;
    }
    return { cdn, url };
}
