import { UrlGenerator, UrlParser, UrlTransformer } from "../types.js";
export interface SupabaseParams {
    /**
     * The quality of the returned image - a value from 20 to 100 (with 100 being the highest quality).
     *
     * @type {number}
     * @default 80
     * @see https://supabase.com/docs/guides/storage/serving/image-transformations#optimizing
     */
    quality?: number;
    /**
     * You can use different resizing modes to fit your needs, each of them uses a different approach to resize the image.
     * - `cover`: resizes the image while keeping the aspect ratio to fill a given size and crops projecting parts. (default)
     * - `contain`: resizes the image while keeping the aspect ratio to fit a given size.
     * - `fill`: resizes the image without keeping the aspect ratio.
     *
     * @type {"cover" | "contain" | "fill"}
     * @default "cover"
     * @see https://supabase.com/docs/guides/storage/serving/image-transformations#modes
     */
    resize?: "cover" | "contain" | "fill";
}
export declare const parse: UrlParser<SupabaseParams>;
export declare const generate: UrlGenerator<SupabaseParams>;
export declare const transform: UrlTransformer;
//# sourceMappingURL=supabase.d.ts.map