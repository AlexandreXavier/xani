"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.transform = exports.generate = exports.parse = exports.generateFilters = exports.splitFilters = void 0;
const utils_js_1 = require("../utils.js");
const storyBlokAssets = /(?<id>\/f\/\d+\/\d+x\d+\/\w+\/[^\/]+)\/?(?<modifiers>m\/?(?<crop>\d+x\d+:\d+x\d+)?\/?(?<resize>(?<flipx>\-)?(?<width>\d+)x(?<flipy>\-)?(?<height>\d+))?\/?(filters\:(?<filters>[^\/]+))?)?$/g;
const storyBlokImg2 = /^(?<modifiers>\/(?<crop>\d+x\d+:\d+x\d+)?\/?(?<resize>(?<flipx>\-)?(?<width>\d+)x(?<flipy>\-)?(?<height>\d+))?\/?(filters\:(?<filters>[^\/]+))?\/?)?(?<id>\/f\/.+)$/g;
const splitFilters = (filters) => {
    if (!filters) {
        return {};
    }
    return Object.fromEntries(filters.split(":").map((filter) => {
        if (!filter)
            return [];
        const [key, value] = filter.split("(");
        return [key, value.replace(")", "")];
    }));
};
exports.splitFilters = splitFilters;
const generateFilters = (filters) => {
    if (!filters) {
        return undefined;
    }
    const filterItems = Object.entries(filters).map(([key, value]) => `${key}(${value ?? ""})`);
    if (filterItems.length === 0) {
        return undefined;
    }
    return `filters:${filterItems.join(":")}`;
};
exports.generateFilters = generateFilters;
const parse = (imageUrl) => {
    const url = (0, utils_js_1.toUrl)(imageUrl);
    // img2.storyblok.com is the old domain for Storyblok images, which used a
    // different path format. We'll assume custom domains are using the new format.
    const regex = url.hostname === "img2.storyblok.com"
        ? storyBlokImg2
        : storyBlokAssets;
    const [matches] = url.pathname.matchAll(regex);
    if (!matches || !matches.groups) {
        throw new Error("Invalid Storyblok URL");
    }
    const { id, crop, width, height, filters, flipx, flipy } = matches.groups;
    const { format, ...filterMap } = (0, exports.splitFilters)(filters);
    // We update old img2.storyblok.com URLs to use the new syntax and domain
    if (url.hostname === "img2.storyblok.com") {
        url.hostname = "a.storyblok.com";
    }
    return {
        base: url.origin + id,
        width: Number(width) || undefined,
        height: Number(height) || undefined,
        format,
        params: {
            crop,
            filters: filterMap,
            flipx: flipx,
            flipy: flipy,
        },
        cdn: "storyblok",
    };
};
exports.parse = parse;
const generate = ({ base, width = 0, height = 0, format, params = {} }) => {
    const { crop, filters, flipx = "", flipy = "" } = params;
    const size = `${flipx}${width}x${flipy}${height}`;
    return new URL([base, "m", crop, size, (0, exports.generateFilters)(filters), format].filter(Boolean).join("/"));
};
exports.generate = generate;
const transform = ({ url: originalUrl, width, height, format }) => {
    const parsed = (0, exports.parse)(originalUrl);
    if (!parsed) {
        return;
    }
    if (format) {
        if (!parsed.params) {
            parsed.params = { filters: {} };
        }
        if (!parsed.params.filters) {
            parsed.params.filters = {};
        }
        parsed.params.filters.format = format;
    }
    return (0, exports.generate)({
        ...parsed,
        width,
        height,
    });
};
exports.transform = transform;
