import { UrlGenerator, UrlParser, UrlTransformer } from "../types.js";
/**
 * Taken from uploadcare/blocks
 *
 * @see https://github.com/uploadcare/blocks/blob/87d1048e94f05f99e1da988c86c6362522e9a3c8/utils/cdn-utils.js#L57
 */
export declare function extractFilename(cdnUrl: string): string;
/**
 * Taken from uploadcare/blocks
 *
 * @see https://github.com/uploadcare/blocks/blob/87d1048e94f05f99e1da988c86c6362522e9a3c8/utils/cdn-utils.js#L131
 */
export declare function isFileUrl(filename: string): boolean;
/**
 * Taken from uploadcare/blocks
 *
 * @see https://github.com/uploadcare/blocks/blob/87d1048e94f05f99e1da988c86c6362522e9a3c8/utils/cdn-utils.js#L141
 */
export declare function splitFileUrl(fileUrl: string): {
    pathname: string;
    search: string;
    hash: string;
};
/**
 * Taken from uploadcare/blocks
 *
 * @see https://github.com/uploadcare/blocks/blob/87d1048e94f05f99e1da988c86c6362522e9a3c8/utils/cdn-utils.js#L114
 */
export declare function trimFilename(cdnUrl: string): string;
/**
 * Taken from uploadcare/blocks
 *
 * @see https://github.com/uploadcare/blocks/blob/87d1048e94f05f99e1da988c86c6362522e9a3c8/utils/cdn-utils.js#L9C1-L24C3
 */
export declare const normalizeCdnOperation: (operation: string) => string;
/**
 * Taken from uploadcare/blocks
 *
 * @see https://github.com/uploadcare/blocks/blob/87d1048e94f05f99e1da988c86c6362522e9a3c8/utils/cdn-utils.js#L93C1-L106C2
 */
export declare function extractOperations(cdnUrl: string): string[];
type NumericRange<START extends number, END extends number, ARR extends unknown[] = [], ACC extends number = never> = ARR["length"] extends END ? ACC | START | END : NumericRange<START, END, [
    ...ARR,
    1
], ARR[START] extends undefined ? ACC : ACC | ARR["length"]>;
interface UploadcareOperations {
    /**
     * @see https://uploadcare.com/docs/transformations/image/compression/#operation-format
     *
     * @default "auto"
     */
    format?: "jpeg" | "png" | "webp" | "auto" | "preserve";
    /**
     * @see https://uploadcare.com/docs/transformations/image/compression/#operation-quality
     *
     * @default "normal"
     */
    quality?: "normal" | "better" | "best" | "lighter" | "lightest";
    /**
     * @see https://uploadcare.com/docs/transformations/image/compression/#operation-progressive
     *
     * @default "no"
     */
    progressive?: "yes" | "no";
    /**
     * @see https://uploadcare.com/docs/transformations/image/compression/#meta-information-control
     *
     * @default "all"
     */
    strip_meta?: "all" | "none" | "sensitive";
    /**
     * @see https://uploadcare.com/docs/transformations/image/resize-crop/#operation-preview
     *
     * @example "320x240"
     * @returns `-/preview/:dimensions/`
     */
    preview?: `${number}x${number}`;
    /**
     * @see https://uploadcare.com/docs/transformations/image/resize-crop/#operation-resize
     *
     * @example "320x240", "320x" or "x240"
     * @returns `-/resize/:one_or_two_dimensions/`
     */
    resize?: `${number}x${number}` | `${number}x` | `x${number}`;
    /**
     * @see https://uploadcare.com/docs/transformations/image/resize-crop/#operation-stretch
     *
     * @returns `-/stretch/:mode/`
     */
    stretch?: "on" | "off" | "fill";
    /**
     * @see https://uploadcare.com/docs/transformations/image/resize-crop/#operation-smart-resize
     *
     * @returns `-/smart_resize/:dimensions/`
     */
    smart_resize?: `${number}x${number}`;
    /**
     * @see https://uploadcare.com/docs/transformations/image/resize-crop/#operation-crop
     *
     * @returns `-/crop/:dimensions/` or `-/crop/:dimensions/:alignment/`
     */
    crop?: `${number}${"x" | ","}${number}` | `${number}${"x" | ","}${number}${"p" | "%"}` | `${number}${"p" | "%"}${"x" | ","}${number}` | `${number}${"p" | "%"}${"x" | ","}${number}${"p" | "%"}` | `${number}${"x" | ","}${number}/${number}${"x" | ","}${number}` | `${number}${"x" | ","}${number}/${number}${"x" | ","}${number}${"p" | "%"}` | `${number}${"x" | ","}${number}/${number}${"p" | "%"}${"x" | ","}${number}` | `${number}${"x" | ","}${number}/${number}${"p" | "%"}${"x" | ","}${number}${"p" | "%"}`;
    /**
     * @see https://uploadcare.com/docs/transformations/image/resize-crop/#operation-scale-crop
     *
     * @returns `-/scale_crop/:dimensions/` or `-/scale_crop/:dimensions/:alignment/
     */
    scale_crop?: `${number}${"x" | ","}${number}` | `${number}${"x" | ","}${number}${"p" | "%"}` | `${number}${"p" | "%"}${"x" | ","}${number}` | `${number}${"p" | "%"}${"x" | ","}${number}${"p" | "%"}` | `${number}${"x" | ","}${number}/${number}${"x" | ","}${number}` | `${number}${"x" | ","}${number}/${number}${"x" | ","}${number}${"p" | "%"}` | `${number}${"x" | ","}${number}/${number}${"p" | "%"}${"x" | ","}${number}` | `${number}${"x" | ","}${number}/${number}${"p" | "%"}${"x" | ","}${number}${"p" | "%"}`;
    /**
     * @see https://uploadcare.com/docs/transformations/image/resize-crop/#operation-border-radius
     *
     * @returns `-/border_radius/:radii/ or `-/border_radius/:radii/:vertical_radii/`
     */
    border_radius?: `${number}${"p" | "%" | ""}${"," | ""}${number}${"p" | "%" | ""}` | `${number}${"p" | "%" | ""}${"," | ""}${number}${"p" | "%" | ""}/${number}${"p" | "%"}${"," | ""}${number}${"p" | "%" | ""}` | `${number}${"p" | "%" | ""}${"," | ""}${number}${"p" | "%" | ""}/${number}${"p" | "%"}${"," | ""}${number}${"p" | "%" | ""}`;
    /**
     * @see https://uploadcare.com/docs/transformations/image/resize-crop/#operation-setfill
     *
     * @returns `-/setfill/:color/`
     */
    setfill?: string;
    /**
     * @see https://uploadcare.com/docs/transformations/image/resize-crop/#operation-zoom-objects
     *
     * @returns `-/zoom_objects/:zoom/`
     */
    zoom_objects?: NumericRange<1, 100>;
    /**
     * @see https://uploadcare.com/docs/transformations/image/resize-crop/#operation-autorotate
     *
     * @returns `-/autorotate/yes/` or `-/autorotate/no/`
     */
    autorotate?: "yes" | "no";
    /**
     * @see https://uploadcare.com/docs/transformations/image/resize-crop/#operation-autorotate
     *
     * @returns `-/rotate/:angle/`
     */
    rotate?: NumericRange<0, 359>;
    /**
     * @see https://uploadcare.com/docs/transformations/image/resize-crop/#operation-flip
     *
     * @returns `-/flip/`
     */
    flip?: true;
    /**
     * @see https://uploadcare.com/docs/transformations/image/resize-crop/#operation-mirror
     *
     * @returns `-/mirror/`
     */
    mirror?: true;
}
export interface UploadcareParams {
    host?: string;
    uuid?: string;
    operations?: UploadcareOperations;
    filename?: string;
}
export declare const parse: UrlParser<UploadcareParams>;
export declare const generate: UrlGenerator<UploadcareParams>;
export declare const transform: UrlTransformer;
export {};
//# sourceMappingURL=uploadcare.d.ts.map