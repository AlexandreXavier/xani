"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.transform = exports.parse = void 0;
const utils_js_1 = require("../utils.js");
const parse = (url) => {
    const parsed = (0, utils_js_1.toUrl)(url);
    const width = Number(parsed.searchParams.get("w")) || undefined;
    const height = Number(parsed.searchParams.get("h")) || undefined;
    const quality = Number(parsed.searchParams.get("q")) || undefined;
    const format = parsed.searchParams.get("fm") || undefined;
    const params = {};
    parsed.searchParams.forEach((value, key) => {
        params[key] = value;
    });
    parsed.search = "";
    return {
        base: parsed.toString(),
        width,
        height,
        quality,
        format,
        params,
        cdn: "imgix",
    };
};
exports.parse = parse;
const transform = ({ url: originalUrl, width, height, format }) => {
    const url = (0, utils_js_1.toUrl)(originalUrl);
    (0, utils_js_1.setParamIfDefined)(url, "w", width, true, true);
    (0, utils_js_1.setParamIfDefined)(url, "h", height, true, true);
    (0, utils_js_1.setParamIfUndefined)(url, "fit", "min");
    if (format) {
        url.searchParams.set("fm", format);
        const fm = url.searchParams.get("auto");
        if (fm === "format") {
            url.searchParams.delete("auto");
        }
        else if (fm?.includes("format")) {
            url.searchParams.set("auto", fm.split(",").filter((s) => s !== "format").join(","));
        }
    }
    else {
        url.searchParams.delete("fm");
        if (!url.searchParams.get("auto")?.includes("format")) {
            url.searchParams.append("auto", "format");
        }
    }
    return url;
};
exports.transform = transform;
